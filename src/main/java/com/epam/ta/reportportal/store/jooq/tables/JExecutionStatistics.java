/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.store.jooq.tables;

import com.epam.ta.reportportal.store.jooq.Indexes;
import com.epam.ta.reportportal.store.jooq.JPublic;
import com.epam.ta.reportportal.store.jooq.Keys;
import com.epam.ta.reportportal.store.jooq.tables.records.JExecutionStatisticsRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;

/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.10.5" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JExecutionStatistics extends TableImpl<JExecutionStatisticsRecord> {

	private static final long serialVersionUID = -1777595957;

	/**
	 * The reference instance of <code>public.execution_statistics</code>
	 */
	public static final JExecutionStatistics EXECUTION_STATISTICS = new JExecutionStatistics();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<JExecutionStatisticsRecord> getRecordType() {
		return JExecutionStatisticsRecord.class;
	}

	/**
	 * The column <code>public.execution_statistics.id</code>.
	 */
	public final TableField<JExecutionStatisticsRecord, Long> ID = createField(
			"id", org.jooq.impl.SQLDataType.BIGINT.nullable(false)
					.defaultValue(
							org.jooq.impl.DSL.field("nextval('execution_statistics_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)),
			this, ""
	);

	/**
	 * The column <code>public.execution_statistics.passed</code>.
	 */
	public final TableField<JExecutionStatisticsRecord, Integer> PASSED = createField(
			"passed", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this,
			""
	);

	/**
	 * The column <code>public.execution_statistics.failed</code>.
	 */
	public final TableField<JExecutionStatisticsRecord, Integer> FAILED = createField(
			"failed", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this,
			""
	);

	/**
	 * The column <code>public.execution_statistics.skipped</code>.
	 */
	public final TableField<JExecutionStatisticsRecord, Integer> SKIPPED = createField(
			"skipped", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)),
			this, ""
	);

	/**
	 * The column <code>public.execution_statistics.total</code>.
	 */
	public final TableField<JExecutionStatisticsRecord, Integer> TOTAL = createField(
			"total", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.field("0", org.jooq.impl.SQLDataType.INTEGER)), this,
			""
	);

	/**
	 * Create a <code>public.execution_statistics</code> table reference
	 */
	public JExecutionStatistics() {
		this(DSL.name("execution_statistics"), null);
	}

	/**
	 * Create an aliased <code>public.execution_statistics</code> table reference
	 */
	public JExecutionStatistics(String alias) {
		this(DSL.name(alias), EXECUTION_STATISTICS);
	}

	/**
	 * Create an aliased <code>public.execution_statistics</code> table reference
	 */
	public JExecutionStatistics(Name alias) {
		this(alias, EXECUTION_STATISTICS);
	}

	private JExecutionStatistics(Name alias, Table<JExecutionStatisticsRecord> aliased) {
		this(alias, aliased, null);
	}

	private JExecutionStatistics(Name alias, Table<JExecutionStatisticsRecord> aliased, Field<?>[] parameters) {
		super(alias, null, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Schema getSchema() {
		return JPublic.PUBLIC;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<Index> getIndexes() {
		return Arrays.<Index>asList(Indexes.PK_EXECUTION_STATISTICS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<JExecutionStatisticsRecord, Long> getIdentity() {
		return Keys.IDENTITY_EXECUTION_STATISTICS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<JExecutionStatisticsRecord> getPrimaryKey() {
		return Keys.PK_EXECUTION_STATISTICS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<JExecutionStatisticsRecord>> getKeys() {
		return Arrays.<UniqueKey<JExecutionStatisticsRecord>>asList(Keys.PK_EXECUTION_STATISTICS);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JExecutionStatistics as(String alias) {
		return new JExecutionStatistics(DSL.name(alias), this);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JExecutionStatistics as(Name alias) {
		return new JExecutionStatistics(alias, this);
	}

	/**
	 * Rename this table
	 */
	@Override
	public JExecutionStatistics rename(String name) {
		return new JExecutionStatistics(DSL.name(name), null);
	}

	/**
	 * Rename this table
	 */
	@Override
	public JExecutionStatistics rename(Name name) {
		return new JExecutionStatistics(name, null);
	}
}
